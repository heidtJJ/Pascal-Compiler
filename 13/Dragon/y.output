Terminals unused in grammar

   TYPE
   ARGS
   BOOLEAN
   NOT_SET
   EQ
   NE
   LT
   LE
   GT
   GE
   PLUS
   MINUS
   OR
   STAR
   SLASH
   AND
   COMMA
   SEMICOLON
   ARRAY_ACCESS
   FUNCTION_CALL
   PROCEDURE_CALL
   COMPOUND_STATEMENT
   ARGUMENT_TYPE


State 95 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 $@1: %empty

    2 $@2: %empty

    3 $@3: %empty

    4 program: $@1 PROGRAM ID $@2 '(' identifier_list ')' ';' $@3 declarations subprogram_declarations compound_statement '.'

    5 identifier_list: ID
    6                | ID ',' identifier_list

    7 declarations: declarations VAR identifier_list ':' type ';'
    8             | %empty

    9 type: standard_type
   10     | ARRAY '[' INUM DOTDOT INUM ']' OF standard_type

   11 standard_type: INTEGER
   12              | REAL

   13 subprogram_declarations: subprogram_declarations subprogram_declaration ';'
   14                        | %empty

   15 subprogram_declaration: subprogram_head declarations subprogram_declarations compound_statement

   16 $@4: %empty

   17 subprogram_head: FUNCTION ID $@4 arguments ':' standard_type ';'

   18 $@5: %empty

   19 subprogram_head: PROCEDURE ID $@5 arguments ';'

   20 arguments: '(' parameter_list ')'
   21          | %empty

   22 parameter_list: identifier_list ':' type
   23               | identifier_list ':' type ';' parameter_list

   24 compound_statement: BBEGIN optional_statements END

   25 optional_statements: statement_list
   26                    | %empty

   27 statement_list: statement
   28               | statement ';' optional_statements

   29 statement: matched
   30          | unmatched

   31 matched: IF expression THEN matched ELSE matched
   32        | variable ASSIGNOP expression
   33        | procedure_statement
   34        | compound_statement
   35        | WHILE expression DO matched
   36        | FOR variable ASSIGNOP expression TO expression DO statement

   37 unmatched: IF expression THEN statement
   38          | IF expression THEN matched ELSE unmatched

   39 variable: ID
   40         | ID '[' simple_expression ']'

   41 procedure_statement: ID
   42                    | ID '(' expression_list ')'

   43 expression_list: expression
   44                | expression ',' expression_list

   45 expression: simple_expression
   46           | simple_expression RELOP simple_expression

   47 simple_expression: term
   48                  | ADDOP term
   49                  | simple_expression ADDOP term

   50 term: factor
   51     | term MULOP factor

   52 factor: ID '(' expression_list ')'
   53       | variable
   54       | INUM
   55       | RNUM
   56       | '(' expression ')'
   57       | NOT factor


Terminals, with rules where they appear

$end (0) 0
'(' (40) 4 20 42 52 56
')' (41) 4 20 42 52 56
',' (44) 6 44
'.' (46) 4
':' (58) 7 17 22 23
';' (59) 4 7 13 17 19 23 28
'[' (91) 10 40
']' (93) 10 40
error (256)
PROGRAM (258) 4
BBEGIN (259) 24
END (260) 24
VAR (261) 7
TYPE (262)
PROCEDURE (263) 19
FUNCTION (264) 17
ARGS (265)
INTEGER (266) 11
REAL (267) 12
BOOLEAN (268)
NOT_SET (269)
ARRAY (270) 10
OF (271) 10
DOTDOT (272) 10
IF (273) 31 37 38
THEN (274) 31 37 38
ELSE (275) 31 38
WHILE (276) 35
FOR (277) 36
DO (278) 35 36
TO (279) 36
ASSIGNOP (280) 32 36
RELOP (281) 46
EQ (282)
NE (283)
LT (284)
LE (285)
GT (286)
GE (287)
ADDOP (288) 48 49
PLUS (289)
MINUS (290)
OR (291)
MULOP (292) 51
STAR (293)
SLASH (294)
AND (295)
NOT (296) 57
ID (297) 4 5 6 17 19 39 40 41 42 52
INUM (298) 10 54
RNUM (299) 55
COMMA (300)
SEMICOLON (301)
ARRAY_ACCESS (302)
FUNCTION_CALL (303)
PROCEDURE_CALL (304)
COMPOUND_STATEMENT (305)
ARGUMENT_TYPE (306)


Nonterminals, with rules where they appear

$accept (60)
    on left: 0
program (61)
    on left: 4, on right: 0
$@1 (62)
    on left: 1, on right: 4
$@2 (63)
    on left: 2, on right: 4
$@3 (64)
    on left: 3, on right: 4
identifier_list (65)
    on left: 5 6, on right: 4 6 7 22 23
declarations (66)
    on left: 7 8, on right: 4 7 15
type (67)
    on left: 9 10, on right: 7 22 23
standard_type (68)
    on left: 11 12, on right: 9 10 17
subprogram_declarations (69)
    on left: 13 14, on right: 4 13 15
subprogram_declaration (70)
    on left: 15, on right: 13
subprogram_head (71)
    on left: 17 19, on right: 15
$@4 (72)
    on left: 16, on right: 17
$@5 (73)
    on left: 18, on right: 19
arguments (74)
    on left: 20 21, on right: 17 19
parameter_list (75)
    on left: 22 23, on right: 20 23
compound_statement (76)
    on left: 24, on right: 4 15 34
optional_statements (77)
    on left: 25 26, on right: 24 28
statement_list (78)
    on left: 27 28, on right: 25
statement (79)
    on left: 29 30, on right: 27 28 36 37
matched (80)
    on left: 31 32 33 34 35 36, on right: 29 31 35 38
unmatched (81)
    on left: 37 38, on right: 30 38
variable (82)
    on left: 39 40, on right: 32 36 53
procedure_statement (83)
    on left: 41 42, on right: 33
expression_list (84)
    on left: 43 44, on right: 42 44 52
expression (85)
    on left: 45 46, on right: 31 32 35 36 37 38 43 44 56
simple_expression (86)
    on left: 47 48 49, on right: 40 45 46 49
term (87)
    on left: 50 51, on right: 47 48 49 51
factor (88)
    on left: 52 53 54 55 56 57, on right: 50 51 57


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 ($@1)

    program  go to state 1
    $@1      go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    4 program: $@1 . PROGRAM ID $@2 '(' identifier_list ')' ';' $@3 declarations subprogram_declarations compound_statement '.'

    PROGRAM  shift, and go to state 4


State 3

    0 $accept: program $end .

    $default  accept


State 4

    4 program: $@1 PROGRAM . ID $@2 '(' identifier_list ')' ';' $@3 declarations subprogram_declarations compound_statement '.'

    ID  shift, and go to state 5


State 5

    4 program: $@1 PROGRAM ID . $@2 '(' identifier_list ')' ';' $@3 declarations subprogram_declarations compound_statement '.'

    $default  reduce using rule 2 ($@2)

    $@2  go to state 6


State 6

    4 program: $@1 PROGRAM ID $@2 . '(' identifier_list ')' ';' $@3 declarations subprogram_declarations compound_statement '.'

    '('  shift, and go to state 7


State 7

    4 program: $@1 PROGRAM ID $@2 '(' . identifier_list ')' ';' $@3 declarations subprogram_declarations compound_statement '.'

    ID  shift, and go to state 8

    identifier_list  go to state 9


State 8

    5 identifier_list: ID .
    6                | ID . ',' identifier_list

    ','  shift, and go to state 10

    $default  reduce using rule 5 (identifier_list)


State 9

    4 program: $@1 PROGRAM ID $@2 '(' identifier_list . ')' ';' $@3 declarations subprogram_declarations compound_statement '.'

    ')'  shift, and go to state 11


State 10

    6 identifier_list: ID ',' . identifier_list

    ID  shift, and go to state 8

    identifier_list  go to state 12


State 11

    4 program: $@1 PROGRAM ID $@2 '(' identifier_list ')' . ';' $@3 declarations subprogram_declarations compound_statement '.'

    ';'  shift, and go to state 13


State 12

    6 identifier_list: ID ',' identifier_list .

    $default  reduce using rule 6 (identifier_list)


State 13

    4 program: $@1 PROGRAM ID $@2 '(' identifier_list ')' ';' . $@3 declarations subprogram_declarations compound_statement '.'

    $default  reduce using rule 3 ($@3)

    $@3  go to state 14


State 14

    4 program: $@1 PROGRAM ID $@2 '(' identifier_list ')' ';' $@3 . declarations subprogram_declarations compound_statement '.'

    $default  reduce using rule 8 (declarations)

    declarations  go to state 15


State 15

    4 program: $@1 PROGRAM ID $@2 '(' identifier_list ')' ';' $@3 declarations . subprogram_declarations compound_statement '.'
    7 declarations: declarations . VAR identifier_list ':' type ';'

    VAR  shift, and go to state 16

    $default  reduce using rule 14 (subprogram_declarations)

    subprogram_declarations  go to state 17


State 16

    7 declarations: declarations VAR . identifier_list ':' type ';'

    ID  shift, and go to state 8

    identifier_list  go to state 18


State 17

    4 program: $@1 PROGRAM ID $@2 '(' identifier_list ')' ';' $@3 declarations subprogram_declarations . compound_statement '.'
   13 subprogram_declarations: subprogram_declarations . subprogram_declaration ';'

    BBEGIN     shift, and go to state 19
    PROCEDURE  shift, and go to state 20
    FUNCTION   shift, and go to state 21

    subprogram_declaration  go to state 22
    subprogram_head         go to state 23
    compound_statement      go to state 24


State 18

    7 declarations: declarations VAR identifier_list . ':' type ';'

    ':'  shift, and go to state 25


State 19

   24 compound_statement: BBEGIN . optional_statements END

    BBEGIN  shift, and go to state 19
    IF      shift, and go to state 26
    WHILE   shift, and go to state 27
    FOR     shift, and go to state 28
    ID      shift, and go to state 29

    $default  reduce using rule 26 (optional_statements)

    compound_statement   go to state 30
    optional_statements  go to state 31
    statement_list       go to state 32
    statement            go to state 33
    matched              go to state 34
    unmatched            go to state 35
    variable             go to state 36
    procedure_statement  go to state 37


State 20

   19 subprogram_head: PROCEDURE . ID $@5 arguments ';'

    ID  shift, and go to state 38


State 21

   17 subprogram_head: FUNCTION . ID $@4 arguments ':' standard_type ';'

    ID  shift, and go to state 39


State 22

   13 subprogram_declarations: subprogram_declarations subprogram_declaration . ';'

    ';'  shift, and go to state 40


State 23

   15 subprogram_declaration: subprogram_head . declarations subprogram_declarations compound_statement

    $default  reduce using rule 8 (declarations)

    declarations  go to state 41


State 24

    4 program: $@1 PROGRAM ID $@2 '(' identifier_list ')' ';' $@3 declarations subprogram_declarations compound_statement . '.'

    '.'  shift, and go to state 42


State 25

    7 declarations: declarations VAR identifier_list ':' . type ';'

    INTEGER  shift, and go to state 43
    REAL     shift, and go to state 44
    ARRAY    shift, and go to state 45

    type           go to state 46
    standard_type  go to state 47


State 26

   31 matched: IF . expression THEN matched ELSE matched
   37 unmatched: IF . expression THEN statement
   38          | IF . expression THEN matched ELSE unmatched

    ADDOP  shift, and go to state 48
    NOT    shift, and go to state 49
    ID     shift, and go to state 50
    INUM   shift, and go to state 51
    RNUM   shift, and go to state 52
    '('    shift, and go to state 53

    variable           go to state 54
    expression         go to state 55
    simple_expression  go to state 56
    term               go to state 57
    factor             go to state 58


State 27

   35 matched: WHILE . expression DO matched

    ADDOP  shift, and go to state 48
    NOT    shift, and go to state 49
    ID     shift, and go to state 50
    INUM   shift, and go to state 51
    RNUM   shift, and go to state 52
    '('    shift, and go to state 53

    variable           go to state 54
    expression         go to state 59
    simple_expression  go to state 56
    term               go to state 57
    factor             go to state 58


State 28

   36 matched: FOR . variable ASSIGNOP expression TO expression DO statement

    ID  shift, and go to state 60

    variable  go to state 61


State 29

   39 variable: ID .
   40         | ID . '[' simple_expression ']'
   41 procedure_statement: ID .
   42                    | ID . '(' expression_list ')'

    '('  shift, and go to state 62
    '['  shift, and go to state 63

    ASSIGNOP  reduce using rule 39 (variable)
    $default  reduce using rule 41 (procedure_statement)


State 30

   34 matched: compound_statement .

    $default  reduce using rule 34 (matched)


State 31

   24 compound_statement: BBEGIN optional_statements . END

    END  shift, and go to state 64


State 32

   25 optional_statements: statement_list .

    $default  reduce using rule 25 (optional_statements)


State 33

   27 statement_list: statement .
   28               | statement . ';' optional_statements

    ';'  shift, and go to state 65

    $default  reduce using rule 27 (statement_list)


State 34

   29 statement: matched .

    $default  reduce using rule 29 (statement)


State 35

   30 statement: unmatched .

    $default  reduce using rule 30 (statement)


State 36

   32 matched: variable . ASSIGNOP expression

    ASSIGNOP  shift, and go to state 66


State 37

   33 matched: procedure_statement .

    $default  reduce using rule 33 (matched)


State 38

   19 subprogram_head: PROCEDURE ID . $@5 arguments ';'

    $default  reduce using rule 18 ($@5)

    $@5  go to state 67


State 39

   17 subprogram_head: FUNCTION ID . $@4 arguments ':' standard_type ';'

    $default  reduce using rule 16 ($@4)

    $@4  go to state 68


State 40

   13 subprogram_declarations: subprogram_declarations subprogram_declaration ';' .

    $default  reduce using rule 13 (subprogram_declarations)


State 41

    7 declarations: declarations . VAR identifier_list ':' type ';'
   15 subprogram_declaration: subprogram_head declarations . subprogram_declarations compound_statement

    VAR  shift, and go to state 16

    $default  reduce using rule 14 (subprogram_declarations)

    subprogram_declarations  go to state 69


State 42

    4 program: $@1 PROGRAM ID $@2 '(' identifier_list ')' ';' $@3 declarations subprogram_declarations compound_statement '.' .

    $default  reduce using rule 4 (program)


State 43

   11 standard_type: INTEGER .

    $default  reduce using rule 11 (standard_type)


State 44

   12 standard_type: REAL .

    $default  reduce using rule 12 (standard_type)


State 45

   10 type: ARRAY . '[' INUM DOTDOT INUM ']' OF standard_type

    '['  shift, and go to state 70


State 46

    7 declarations: declarations VAR identifier_list ':' type . ';'

    ';'  shift, and go to state 71


State 47

    9 type: standard_type .

    $default  reduce using rule 9 (type)


State 48

   48 simple_expression: ADDOP . term

    NOT   shift, and go to state 49
    ID    shift, and go to state 50
    INUM  shift, and go to state 51
    RNUM  shift, and go to state 52
    '('   shift, and go to state 53

    variable  go to state 54
    term      go to state 72
    factor    go to state 58


State 49

   57 factor: NOT . factor

    NOT   shift, and go to state 49
    ID    shift, and go to state 50
    INUM  shift, and go to state 51
    RNUM  shift, and go to state 52
    '('   shift, and go to state 53

    variable  go to state 54
    factor    go to state 73


State 50

   39 variable: ID .
   40         | ID . '[' simple_expression ']'
   52 factor: ID . '(' expression_list ')'

    '('  shift, and go to state 74
    '['  shift, and go to state 63

    $default  reduce using rule 39 (variable)


State 51

   54 factor: INUM .

    $default  reduce using rule 54 (factor)


State 52

   55 factor: RNUM .

    $default  reduce using rule 55 (factor)


State 53

   56 factor: '(' . expression ')'

    ADDOP  shift, and go to state 48
    NOT    shift, and go to state 49
    ID     shift, and go to state 50
    INUM   shift, and go to state 51
    RNUM   shift, and go to state 52
    '('    shift, and go to state 53

    variable           go to state 54
    expression         go to state 75
    simple_expression  go to state 56
    term               go to state 57
    factor             go to state 58


State 54

   53 factor: variable .

    $default  reduce using rule 53 (factor)


State 55

   31 matched: IF expression . THEN matched ELSE matched
   37 unmatched: IF expression . THEN statement
   38          | IF expression . THEN matched ELSE unmatched

    THEN  shift, and go to state 76


State 56

   45 expression: simple_expression .
   46           | simple_expression . RELOP simple_expression
   49 simple_expression: simple_expression . ADDOP term

    RELOP  shift, and go to state 77
    ADDOP  shift, and go to state 78

    $default  reduce using rule 45 (expression)


State 57

   47 simple_expression: term .
   51 term: term . MULOP factor

    MULOP  shift, and go to state 79

    $default  reduce using rule 47 (simple_expression)


State 58

   50 term: factor .

    $default  reduce using rule 50 (term)


State 59

   35 matched: WHILE expression . DO matched

    DO  shift, and go to state 80


State 60

   39 variable: ID .
   40         | ID . '[' simple_expression ']'

    '['  shift, and go to state 63

    $default  reduce using rule 39 (variable)


State 61

   36 matched: FOR variable . ASSIGNOP expression TO expression DO statement

    ASSIGNOP  shift, and go to state 81


State 62

   42 procedure_statement: ID '(' . expression_list ')'

    ADDOP  shift, and go to state 48
    NOT    shift, and go to state 49
    ID     shift, and go to state 50
    INUM   shift, and go to state 51
    RNUM   shift, and go to state 52
    '('    shift, and go to state 53

    variable           go to state 54
    expression_list    go to state 82
    expression         go to state 83
    simple_expression  go to state 56
    term               go to state 57
    factor             go to state 58


State 63

   40 variable: ID '[' . simple_expression ']'

    ADDOP  shift, and go to state 48
    NOT    shift, and go to state 49
    ID     shift, and go to state 50
    INUM   shift, and go to state 51
    RNUM   shift, and go to state 52
    '('    shift, and go to state 53

    variable           go to state 54
    simple_expression  go to state 84
    term               go to state 57
    factor             go to state 58


State 64

   24 compound_statement: BBEGIN optional_statements END .

    $default  reduce using rule 24 (compound_statement)


State 65

   28 statement_list: statement ';' . optional_statements

    BBEGIN  shift, and go to state 19
    IF      shift, and go to state 26
    WHILE   shift, and go to state 27
    FOR     shift, and go to state 28
    ID      shift, and go to state 29

    $default  reduce using rule 26 (optional_statements)

    compound_statement   go to state 30
    optional_statements  go to state 85
    statement_list       go to state 32
    statement            go to state 33
    matched              go to state 34
    unmatched            go to state 35
    variable             go to state 36
    procedure_statement  go to state 37


State 66

   32 matched: variable ASSIGNOP . expression

    ADDOP  shift, and go to state 48
    NOT    shift, and go to state 49
    ID     shift, and go to state 50
    INUM   shift, and go to state 51
    RNUM   shift, and go to state 52
    '('    shift, and go to state 53

    variable           go to state 54
    expression         go to state 86
    simple_expression  go to state 56
    term               go to state 57
    factor             go to state 58


State 67

   19 subprogram_head: PROCEDURE ID $@5 . arguments ';'

    '('  shift, and go to state 87

    $default  reduce using rule 21 (arguments)

    arguments  go to state 88


State 68

   17 subprogram_head: FUNCTION ID $@4 . arguments ':' standard_type ';'

    '('  shift, and go to state 87

    $default  reduce using rule 21 (arguments)

    arguments  go to state 89


State 69

   13 subprogram_declarations: subprogram_declarations . subprogram_declaration ';'
   15 subprogram_declaration: subprogram_head declarations subprogram_declarations . compound_statement

    BBEGIN     shift, and go to state 19
    PROCEDURE  shift, and go to state 20
    FUNCTION   shift, and go to state 21

    subprogram_declaration  go to state 22
    subprogram_head         go to state 23
    compound_statement      go to state 90


State 70

   10 type: ARRAY '[' . INUM DOTDOT INUM ']' OF standard_type

    INUM  shift, and go to state 91


State 71

    7 declarations: declarations VAR identifier_list ':' type ';' .

    $default  reduce using rule 7 (declarations)


State 72

   48 simple_expression: ADDOP term .
   51 term: term . MULOP factor

    MULOP  shift, and go to state 79

    $default  reduce using rule 48 (simple_expression)


State 73

   57 factor: NOT factor .

    $default  reduce using rule 57 (factor)


State 74

   52 factor: ID '(' . expression_list ')'

    ADDOP  shift, and go to state 48
    NOT    shift, and go to state 49
    ID     shift, and go to state 50
    INUM   shift, and go to state 51
    RNUM   shift, and go to state 52
    '('    shift, and go to state 53

    variable           go to state 54
    expression_list    go to state 92
    expression         go to state 83
    simple_expression  go to state 56
    term               go to state 57
    factor             go to state 58


State 75

   56 factor: '(' expression . ')'

    ')'  shift, and go to state 93


State 76

   31 matched: IF expression THEN . matched ELSE matched
   37 unmatched: IF expression THEN . statement
   38          | IF expression THEN . matched ELSE unmatched

    BBEGIN  shift, and go to state 19
    IF      shift, and go to state 26
    WHILE   shift, and go to state 27
    FOR     shift, and go to state 28
    ID      shift, and go to state 29

    compound_statement   go to state 30
    statement            go to state 94
    matched              go to state 95
    unmatched            go to state 35
    variable             go to state 36
    procedure_statement  go to state 37


State 77

   46 expression: simple_expression RELOP . simple_expression

    ADDOP  shift, and go to state 48
    NOT    shift, and go to state 49
    ID     shift, and go to state 50
    INUM   shift, and go to state 51
    RNUM   shift, and go to state 52
    '('    shift, and go to state 53

    variable           go to state 54
    simple_expression  go to state 96
    term               go to state 57
    factor             go to state 58


State 78

   49 simple_expression: simple_expression ADDOP . term

    NOT   shift, and go to state 49
    ID    shift, and go to state 50
    INUM  shift, and go to state 51
    RNUM  shift, and go to state 52
    '('   shift, and go to state 53

    variable  go to state 54
    term      go to state 97
    factor    go to state 58


State 79

   51 term: term MULOP . factor

    NOT   shift, and go to state 49
    ID    shift, and go to state 50
    INUM  shift, and go to state 51
    RNUM  shift, and go to state 52
    '('   shift, and go to state 53

    variable  go to state 54
    factor    go to state 98


State 80

   35 matched: WHILE expression DO . matched

    BBEGIN  shift, and go to state 19
    IF      shift, and go to state 99
    WHILE   shift, and go to state 27
    FOR     shift, and go to state 28
    ID      shift, and go to state 29

    compound_statement   go to state 30
    matched              go to state 100
    variable             go to state 36
    procedure_statement  go to state 37


State 81

   36 matched: FOR variable ASSIGNOP . expression TO expression DO statement

    ADDOP  shift, and go to state 48
    NOT    shift, and go to state 49
    ID     shift, and go to state 50
    INUM   shift, and go to state 51
    RNUM   shift, and go to state 52
    '('    shift, and go to state 53

    variable           go to state 54
    expression         go to state 101
    simple_expression  go to state 56
    term               go to state 57
    factor             go to state 58


State 82

   42 procedure_statement: ID '(' expression_list . ')'

    ')'  shift, and go to state 102


State 83

   43 expression_list: expression .
   44                | expression . ',' expression_list

    ','  shift, and go to state 103

    $default  reduce using rule 43 (expression_list)


State 84

   40 variable: ID '[' simple_expression . ']'
   49 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 78
    ']'    shift, and go to state 104


State 85

   28 statement_list: statement ';' optional_statements .

    $default  reduce using rule 28 (statement_list)


State 86

   32 matched: variable ASSIGNOP expression .

    $default  reduce using rule 32 (matched)


State 87

   20 arguments: '(' . parameter_list ')'

    ID  shift, and go to state 8

    identifier_list  go to state 105
    parameter_list   go to state 106


State 88

   19 subprogram_head: PROCEDURE ID $@5 arguments . ';'

    ';'  shift, and go to state 107


State 89

   17 subprogram_head: FUNCTION ID $@4 arguments . ':' standard_type ';'

    ':'  shift, and go to state 108


State 90

   15 subprogram_declaration: subprogram_head declarations subprogram_declarations compound_statement .

    $default  reduce using rule 15 (subprogram_declaration)


State 91

   10 type: ARRAY '[' INUM . DOTDOT INUM ']' OF standard_type

    DOTDOT  shift, and go to state 109


State 92

   52 factor: ID '(' expression_list . ')'

    ')'  shift, and go to state 110


State 93

   56 factor: '(' expression ')' .

    $default  reduce using rule 56 (factor)


State 94

   37 unmatched: IF expression THEN statement .

    $default  reduce using rule 37 (unmatched)


State 95

   29 statement: matched .
   31 matched: IF expression THEN matched . ELSE matched
   38 unmatched: IF expression THEN matched . ELSE unmatched

    ELSE  shift, and go to state 111

    ELSE      [reduce using rule 29 (statement)]
    $default  reduce using rule 29 (statement)


State 96

   46 expression: simple_expression RELOP simple_expression .
   49 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 78

    $default  reduce using rule 46 (expression)


State 97

   49 simple_expression: simple_expression ADDOP term .
   51 term: term . MULOP factor

    MULOP  shift, and go to state 79

    $default  reduce using rule 49 (simple_expression)


State 98

   51 term: term MULOP factor .

    $default  reduce using rule 51 (term)


State 99

   31 matched: IF . expression THEN matched ELSE matched

    ADDOP  shift, and go to state 48
    NOT    shift, and go to state 49
    ID     shift, and go to state 50
    INUM   shift, and go to state 51
    RNUM   shift, and go to state 52
    '('    shift, and go to state 53

    variable           go to state 54
    expression         go to state 112
    simple_expression  go to state 56
    term               go to state 57
    factor             go to state 58


State 100

   35 matched: WHILE expression DO matched .

    $default  reduce using rule 35 (matched)


State 101

   36 matched: FOR variable ASSIGNOP expression . TO expression DO statement

    TO  shift, and go to state 113


State 102

   42 procedure_statement: ID '(' expression_list ')' .

    $default  reduce using rule 42 (procedure_statement)


State 103

   44 expression_list: expression ',' . expression_list

    ADDOP  shift, and go to state 48
    NOT    shift, and go to state 49
    ID     shift, and go to state 50
    INUM   shift, and go to state 51
    RNUM   shift, and go to state 52
    '('    shift, and go to state 53

    variable           go to state 54
    expression_list    go to state 114
    expression         go to state 83
    simple_expression  go to state 56
    term               go to state 57
    factor             go to state 58


State 104

   40 variable: ID '[' simple_expression ']' .

    $default  reduce using rule 40 (variable)


State 105

   22 parameter_list: identifier_list . ':' type
   23               | identifier_list . ':' type ';' parameter_list

    ':'  shift, and go to state 115


State 106

   20 arguments: '(' parameter_list . ')'

    ')'  shift, and go to state 116


State 107

   19 subprogram_head: PROCEDURE ID $@5 arguments ';' .

    $default  reduce using rule 19 (subprogram_head)


State 108

   17 subprogram_head: FUNCTION ID $@4 arguments ':' . standard_type ';'

    INTEGER  shift, and go to state 43
    REAL     shift, and go to state 44

    standard_type  go to state 117


State 109

   10 type: ARRAY '[' INUM DOTDOT . INUM ']' OF standard_type

    INUM  shift, and go to state 118


State 110

   52 factor: ID '(' expression_list ')' .

    $default  reduce using rule 52 (factor)


State 111

   31 matched: IF expression THEN matched ELSE . matched
   38 unmatched: IF expression THEN matched ELSE . unmatched

    BBEGIN  shift, and go to state 19
    IF      shift, and go to state 26
    WHILE   shift, and go to state 27
    FOR     shift, and go to state 28
    ID      shift, and go to state 29

    compound_statement   go to state 30
    matched              go to state 119
    unmatched            go to state 120
    variable             go to state 36
    procedure_statement  go to state 37


State 112

   31 matched: IF expression . THEN matched ELSE matched

    THEN  shift, and go to state 121


State 113

   36 matched: FOR variable ASSIGNOP expression TO . expression DO statement

    ADDOP  shift, and go to state 48
    NOT    shift, and go to state 49
    ID     shift, and go to state 50
    INUM   shift, and go to state 51
    RNUM   shift, and go to state 52
    '('    shift, and go to state 53

    variable           go to state 54
    expression         go to state 122
    simple_expression  go to state 56
    term               go to state 57
    factor             go to state 58


State 114

   44 expression_list: expression ',' expression_list .

    $default  reduce using rule 44 (expression_list)


State 115

   22 parameter_list: identifier_list ':' . type
   23               | identifier_list ':' . type ';' parameter_list

    INTEGER  shift, and go to state 43
    REAL     shift, and go to state 44
    ARRAY    shift, and go to state 45

    type           go to state 123
    standard_type  go to state 47


State 116

   20 arguments: '(' parameter_list ')' .

    $default  reduce using rule 20 (arguments)


State 117

   17 subprogram_head: FUNCTION ID $@4 arguments ':' standard_type . ';'

    ';'  shift, and go to state 124


State 118

   10 type: ARRAY '[' INUM DOTDOT INUM . ']' OF standard_type

    ']'  shift, and go to state 125


State 119

   31 matched: IF expression THEN matched ELSE matched .

    $default  reduce using rule 31 (matched)


State 120

   38 unmatched: IF expression THEN matched ELSE unmatched .

    $default  reduce using rule 38 (unmatched)


State 121

   31 matched: IF expression THEN . matched ELSE matched

    BBEGIN  shift, and go to state 19
    IF      shift, and go to state 99
    WHILE   shift, and go to state 27
    FOR     shift, and go to state 28
    ID      shift, and go to state 29

    compound_statement   go to state 30
    matched              go to state 126
    variable             go to state 36
    procedure_statement  go to state 37


State 122

   36 matched: FOR variable ASSIGNOP expression TO expression . DO statement

    DO  shift, and go to state 127


State 123

   22 parameter_list: identifier_list ':' type .
   23               | identifier_list ':' type . ';' parameter_list

    ';'  shift, and go to state 128

    $default  reduce using rule 22 (parameter_list)


State 124

   17 subprogram_head: FUNCTION ID $@4 arguments ':' standard_type ';' .

    $default  reduce using rule 17 (subprogram_head)


State 125

   10 type: ARRAY '[' INUM DOTDOT INUM ']' . OF standard_type

    OF  shift, and go to state 129


State 126

   31 matched: IF expression THEN matched . ELSE matched

    ELSE  shift, and go to state 130


State 127

   36 matched: FOR variable ASSIGNOP expression TO expression DO . statement

    BBEGIN  shift, and go to state 19
    IF      shift, and go to state 26
    WHILE   shift, and go to state 27
    FOR     shift, and go to state 28
    ID      shift, and go to state 29

    compound_statement   go to state 30
    statement            go to state 131
    matched              go to state 34
    unmatched            go to state 35
    variable             go to state 36
    procedure_statement  go to state 37


State 128

   23 parameter_list: identifier_list ':' type ';' . parameter_list

    ID  shift, and go to state 8

    identifier_list  go to state 105
    parameter_list   go to state 132


State 129

   10 type: ARRAY '[' INUM DOTDOT INUM ']' OF . standard_type

    INTEGER  shift, and go to state 43
    REAL     shift, and go to state 44

    standard_type  go to state 133


State 130

   31 matched: IF expression THEN matched ELSE . matched

    BBEGIN  shift, and go to state 19
    IF      shift, and go to state 99
    WHILE   shift, and go to state 27
    FOR     shift, and go to state 28
    ID      shift, and go to state 29

    compound_statement   go to state 30
    matched              go to state 119
    variable             go to state 36
    procedure_statement  go to state 37


State 131

   36 matched: FOR variable ASSIGNOP expression TO expression DO statement .

    $default  reduce using rule 36 (matched)


State 132

   23 parameter_list: identifier_list ':' type ';' parameter_list .

    $default  reduce using rule 23 (parameter_list)


State 133

   10 type: ARRAY '[' INUM DOTDOT INUM ']' OF standard_type .

    $default  reduce using rule 10 (type)
