Terminals unused in grammar

   EQ
   NE
   LT
   LE
   GT
   GE
   PLUS
   MINUS
   OR
   STAR
   SLASH
   AND
   COMMA
   SEMICOLON
   ARRAY_ACCESS
   FUNCTION_CALL
   PROCEDURE_CALL


State 31 conflicts: 1 shift/reduce
State 91 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 $@1: %empty

    2 program: $@1 PROGRAM ID '(' identifier_list ')' ';' declarations subprogram_declarations compound_statement '.'

    3 identifier_list: ID
    4                | identifier_list ',' ID

    5 declarations: declarations VAR identifier_list ':' type ';'
    6             | %empty

    7 type: standard_type
    8     | ARRAY '[' INUM DOTDOT INUM ']' OF standard_type

    9 standard_type: INTEGER
   10              | REAL

   11 subprogram_declarations: subprogram_declarations subprogram_declaration ';'
   12                        | %empty

   13 subprogram_declaration: subprogram_head declarations subprogram_declarations compound_statement

   14 $@2: %empty

   15 subprogram_head: FUNCTION ID $@2 arguments ':' standard_type ';'

   16 $@3: %empty

   17 subprogram_head: PROCEDURE ID $@3 arguments ';'

   18 arguments: '(' parameter_list ')'
   19          | %empty

   20 parameter_list: identifier_list ':' type
   21               | parameter_list ';' identifier_list ':' type

   22 compound_statement: BBEGIN optional_statements END

   23 optional_statements: statement_list
   24                    | %empty

   25 statement_list: statement
   26               | statement ';' optional_statements

   27 statement: variable ASSIGNOP expression
   28          | procedure_statement
   29          | compound_statement
   30          | IF expression THEN statement ELSE statement
   31          | IF expression THEN statement
   32          | WHILE expression DO statement
   33          | FOR variable ASSIGNOP expression TO expression DO optional_statements

   34 variable: ID
   35         | ID '[' expression ']'

   36 procedure_statement: ID
   37                    | ID '(' expression_list ')'

   38 expression_list: expression
   39                | expression_list ',' expression

   40 expression: simple_expression
   41           | simple_expression RELOP simple_expression

   42 simple_expression: term
   43                  | ADDOP term
   44                  | simple_expression ADDOP term

   45 term: factor
   46     | term MULOP factor

   47 factor: ID
   48       | ID '[' expression ']'
   49       | ID '(' expression_list ')'
   50       | INUM
   51       | RNUM
   52       | '(' expression ')'
   53       | NOT factor


Terminals, with rules where they appear

$end (0) 0
'(' (40) 2 18 37 49 52
')' (41) 2 18 37 49 52
',' (44) 4 39
'.' (46) 2
':' (58) 5 15 20 21
';' (59) 2 5 11 15 17 21 26
'[' (91) 8 35 48
']' (93) 8 35 48
error (256)
PROGRAM (258) 2
BBEGIN (259) 22
END (260) 22
VAR (261) 5
PROCEDURE (262) 17
FUNCTION (263) 15
INTEGER (264) 9
REAL (265) 10
ARRAY (266) 8
OF (267) 8
DOTDOT (268) 8
IF (269) 30 31
THEN (270) 30 31
ELSE (271) 30
WHILE (272) 32
FOR (273) 33
DO (274) 32 33
TO (275) 33
ASSIGNOP (276) 27 33
RELOP (277) 41
EQ (278)
NE (279)
LT (280)
LE (281)
GT (282)
GE (283)
ADDOP (284) 43 44
PLUS (285)
MINUS (286)
OR (287)
MULOP (288) 46
STAR (289)
SLASH (290)
AND (291)
NOT (292) 53
ID (293) 2 3 4 15 17 34 35 36 37 47 48 49
INUM (294) 8 50
RNUM (295) 51
COMMA (296)
SEMICOLON (297)
ARRAY_ACCESS (298)
FUNCTION_CALL (299)
PROCEDURE_CALL (300)


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
program (55)
    on left: 2, on right: 0
$@1 (56)
    on left: 1, on right: 2
identifier_list (57)
    on left: 3 4, on right: 2 4 5 20 21
declarations (58)
    on left: 5 6, on right: 2 5 13
type (59)
    on left: 7 8, on right: 5 20 21
standard_type (60)
    on left: 9 10, on right: 7 8 15
subprogram_declarations (61)
    on left: 11 12, on right: 2 11 13
subprogram_declaration (62)
    on left: 13, on right: 11
subprogram_head (63)
    on left: 15 17, on right: 13
$@2 (64)
    on left: 14, on right: 15
$@3 (65)
    on left: 16, on right: 17
arguments (66)
    on left: 18 19, on right: 15 17
parameter_list (67)
    on left: 20 21, on right: 18 21
compound_statement (68)
    on left: 22, on right: 2 13 29
optional_statements (69)
    on left: 23 24, on right: 22 26 33
statement_list (70)
    on left: 25 26, on right: 23
statement (71)
    on left: 27 28 29 30 31 32 33, on right: 25 26 30 31 32
variable (72)
    on left: 34 35, on right: 27 33
procedure_statement (73)
    on left: 36 37, on right: 28
expression_list (74)
    on left: 38 39, on right: 37 39 49
expression (75)
    on left: 40 41, on right: 27 30 31 32 33 35 38 39 48 52
simple_expression (76)
    on left: 42 43 44, on right: 40 41 44
term (77)
    on left: 45 46, on right: 42 43 44 46
factor (78)
    on left: 47 48 49 50 51 52 53, on right: 45 46 53


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 ($@1)

    program  go to state 1
    $@1      go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    2 program: $@1 . PROGRAM ID '(' identifier_list ')' ';' declarations subprogram_declarations compound_statement '.'

    PROGRAM  shift, and go to state 4


State 3

    0 $accept: program $end .

    $default  accept


State 4

    2 program: $@1 PROGRAM . ID '(' identifier_list ')' ';' declarations subprogram_declarations compound_statement '.'

    ID  shift, and go to state 5


State 5

    2 program: $@1 PROGRAM ID . '(' identifier_list ')' ';' declarations subprogram_declarations compound_statement '.'

    '('  shift, and go to state 6


State 6

    2 program: $@1 PROGRAM ID '(' . identifier_list ')' ';' declarations subprogram_declarations compound_statement '.'

    ID  shift, and go to state 7

    identifier_list  go to state 8


State 7

    3 identifier_list: ID .

    $default  reduce using rule 3 (identifier_list)


State 8

    2 program: $@1 PROGRAM ID '(' identifier_list . ')' ';' declarations subprogram_declarations compound_statement '.'
    4 identifier_list: identifier_list . ',' ID

    ')'  shift, and go to state 9
    ','  shift, and go to state 10


State 9

    2 program: $@1 PROGRAM ID '(' identifier_list ')' . ';' declarations subprogram_declarations compound_statement '.'

    ';'  shift, and go to state 11


State 10

    4 identifier_list: identifier_list ',' . ID

    ID  shift, and go to state 12


State 11

    2 program: $@1 PROGRAM ID '(' identifier_list ')' ';' . declarations subprogram_declarations compound_statement '.'

    $default  reduce using rule 6 (declarations)

    declarations  go to state 13


State 12

    4 identifier_list: identifier_list ',' ID .

    $default  reduce using rule 4 (identifier_list)


State 13

    2 program: $@1 PROGRAM ID '(' identifier_list ')' ';' declarations . subprogram_declarations compound_statement '.'
    5 declarations: declarations . VAR identifier_list ':' type ';'

    VAR  shift, and go to state 14

    $default  reduce using rule 12 (subprogram_declarations)

    subprogram_declarations  go to state 15


State 14

    5 declarations: declarations VAR . identifier_list ':' type ';'

    ID  shift, and go to state 7

    identifier_list  go to state 16


State 15

    2 program: $@1 PROGRAM ID '(' identifier_list ')' ';' declarations subprogram_declarations . compound_statement '.'
   11 subprogram_declarations: subprogram_declarations . subprogram_declaration ';'

    BBEGIN     shift, and go to state 17
    PROCEDURE  shift, and go to state 18
    FUNCTION   shift, and go to state 19

    subprogram_declaration  go to state 20
    subprogram_head         go to state 21
    compound_statement      go to state 22


State 16

    4 identifier_list: identifier_list . ',' ID
    5 declarations: declarations VAR identifier_list . ':' type ';'

    ','  shift, and go to state 10
    ':'  shift, and go to state 23


State 17

   22 compound_statement: BBEGIN . optional_statements END

    BBEGIN  shift, and go to state 17
    IF      shift, and go to state 24
    WHILE   shift, and go to state 25
    FOR     shift, and go to state 26
    ID      shift, and go to state 27

    $default  reduce using rule 24 (optional_statements)

    compound_statement   go to state 28
    optional_statements  go to state 29
    statement_list       go to state 30
    statement            go to state 31
    variable             go to state 32
    procedure_statement  go to state 33


State 18

   17 subprogram_head: PROCEDURE . ID $@3 arguments ';'

    ID  shift, and go to state 34


State 19

   15 subprogram_head: FUNCTION . ID $@2 arguments ':' standard_type ';'

    ID  shift, and go to state 35


State 20

   11 subprogram_declarations: subprogram_declarations subprogram_declaration . ';'

    ';'  shift, and go to state 36


State 21

   13 subprogram_declaration: subprogram_head . declarations subprogram_declarations compound_statement

    $default  reduce using rule 6 (declarations)

    declarations  go to state 37


State 22

    2 program: $@1 PROGRAM ID '(' identifier_list ')' ';' declarations subprogram_declarations compound_statement . '.'

    '.'  shift, and go to state 38


State 23

    5 declarations: declarations VAR identifier_list ':' . type ';'

    INTEGER  shift, and go to state 39
    REAL     shift, and go to state 40
    ARRAY    shift, and go to state 41

    type           go to state 42
    standard_type  go to state 43


State 24

   30 statement: IF . expression THEN statement ELSE statement
   31          | IF . expression THEN statement

    ADDOP  shift, and go to state 44
    NOT    shift, and go to state 45
    ID     shift, and go to state 46
    INUM   shift, and go to state 47
    RNUM   shift, and go to state 48
    '('    shift, and go to state 49

    expression         go to state 50
    simple_expression  go to state 51
    term               go to state 52
    factor             go to state 53


State 25

   32 statement: WHILE . expression DO statement

    ADDOP  shift, and go to state 44
    NOT    shift, and go to state 45
    ID     shift, and go to state 46
    INUM   shift, and go to state 47
    RNUM   shift, and go to state 48
    '('    shift, and go to state 49

    expression         go to state 54
    simple_expression  go to state 51
    term               go to state 52
    factor             go to state 53


State 26

   33 statement: FOR . variable ASSIGNOP expression TO expression DO optional_statements

    ID  shift, and go to state 55

    variable  go to state 56


State 27

   34 variable: ID .
   35         | ID . '[' expression ']'
   36 procedure_statement: ID .
   37                    | ID . '(' expression_list ')'

    '('  shift, and go to state 57
    '['  shift, and go to state 58

    ASSIGNOP  reduce using rule 34 (variable)
    $default  reduce using rule 36 (procedure_statement)


State 28

   29 statement: compound_statement .

    $default  reduce using rule 29 (statement)


State 29

   22 compound_statement: BBEGIN optional_statements . END

    END  shift, and go to state 59


State 30

   23 optional_statements: statement_list .

    $default  reduce using rule 23 (optional_statements)


State 31

   25 statement_list: statement .
   26               | statement . ';' optional_statements

    ';'  shift, and go to state 60

    ';'       [reduce using rule 25 (statement_list)]
    $default  reduce using rule 25 (statement_list)


State 32

   27 statement: variable . ASSIGNOP expression

    ASSIGNOP  shift, and go to state 61


State 33

   28 statement: procedure_statement .

    $default  reduce using rule 28 (statement)


State 34

   17 subprogram_head: PROCEDURE ID . $@3 arguments ';'

    $default  reduce using rule 16 ($@3)

    $@3  go to state 62


State 35

   15 subprogram_head: FUNCTION ID . $@2 arguments ':' standard_type ';'

    $default  reduce using rule 14 ($@2)

    $@2  go to state 63


State 36

   11 subprogram_declarations: subprogram_declarations subprogram_declaration ';' .

    $default  reduce using rule 11 (subprogram_declarations)


State 37

    5 declarations: declarations . VAR identifier_list ':' type ';'
   13 subprogram_declaration: subprogram_head declarations . subprogram_declarations compound_statement

    VAR  shift, and go to state 14

    $default  reduce using rule 12 (subprogram_declarations)

    subprogram_declarations  go to state 64


State 38

    2 program: $@1 PROGRAM ID '(' identifier_list ')' ';' declarations subprogram_declarations compound_statement '.' .

    $default  reduce using rule 2 (program)


State 39

    9 standard_type: INTEGER .

    $default  reduce using rule 9 (standard_type)


State 40

   10 standard_type: REAL .

    $default  reduce using rule 10 (standard_type)


State 41

    8 type: ARRAY . '[' INUM DOTDOT INUM ']' OF standard_type

    '['  shift, and go to state 65


State 42

    5 declarations: declarations VAR identifier_list ':' type . ';'

    ';'  shift, and go to state 66


State 43

    7 type: standard_type .

    $default  reduce using rule 7 (type)


State 44

   43 simple_expression: ADDOP . term

    NOT   shift, and go to state 45
    ID    shift, and go to state 46
    INUM  shift, and go to state 47
    RNUM  shift, and go to state 48
    '('   shift, and go to state 49

    term    go to state 67
    factor  go to state 53


State 45

   53 factor: NOT . factor

    NOT   shift, and go to state 45
    ID    shift, and go to state 46
    INUM  shift, and go to state 47
    RNUM  shift, and go to state 48
    '('   shift, and go to state 49

    factor  go to state 68


State 46

   47 factor: ID .
   48       | ID . '[' expression ']'
   49       | ID . '(' expression_list ')'

    '('  shift, and go to state 69
    '['  shift, and go to state 70

    $default  reduce using rule 47 (factor)


State 47

   50 factor: INUM .

    $default  reduce using rule 50 (factor)


State 48

   51 factor: RNUM .

    $default  reduce using rule 51 (factor)


State 49

   52 factor: '(' . expression ')'

    ADDOP  shift, and go to state 44
    NOT    shift, and go to state 45
    ID     shift, and go to state 46
    INUM   shift, and go to state 47
    RNUM   shift, and go to state 48
    '('    shift, and go to state 49

    expression         go to state 71
    simple_expression  go to state 51
    term               go to state 52
    factor             go to state 53


State 50

   30 statement: IF expression . THEN statement ELSE statement
   31          | IF expression . THEN statement

    THEN  shift, and go to state 72


State 51

   40 expression: simple_expression .
   41           | simple_expression . RELOP simple_expression
   44 simple_expression: simple_expression . ADDOP term

    RELOP  shift, and go to state 73
    ADDOP  shift, and go to state 74

    $default  reduce using rule 40 (expression)


State 52

   42 simple_expression: term .
   46 term: term . MULOP factor

    MULOP  shift, and go to state 75

    $default  reduce using rule 42 (simple_expression)


State 53

   45 term: factor .

    $default  reduce using rule 45 (term)


State 54

   32 statement: WHILE expression . DO statement

    DO  shift, and go to state 76


State 55

   34 variable: ID .
   35         | ID . '[' expression ']'

    '['  shift, and go to state 58

    $default  reduce using rule 34 (variable)


State 56

   33 statement: FOR variable . ASSIGNOP expression TO expression DO optional_statements

    ASSIGNOP  shift, and go to state 77


State 57

   37 procedure_statement: ID '(' . expression_list ')'

    ADDOP  shift, and go to state 44
    NOT    shift, and go to state 45
    ID     shift, and go to state 46
    INUM   shift, and go to state 47
    RNUM   shift, and go to state 48
    '('    shift, and go to state 49

    expression_list    go to state 78
    expression         go to state 79
    simple_expression  go to state 51
    term               go to state 52
    factor             go to state 53


State 58

   35 variable: ID '[' . expression ']'

    ADDOP  shift, and go to state 44
    NOT    shift, and go to state 45
    ID     shift, and go to state 46
    INUM   shift, and go to state 47
    RNUM   shift, and go to state 48
    '('    shift, and go to state 49

    expression         go to state 80
    simple_expression  go to state 51
    term               go to state 52
    factor             go to state 53


State 59

   22 compound_statement: BBEGIN optional_statements END .

    $default  reduce using rule 22 (compound_statement)


State 60

   26 statement_list: statement ';' . optional_statements

    BBEGIN  shift, and go to state 17
    IF      shift, and go to state 24
    WHILE   shift, and go to state 25
    FOR     shift, and go to state 26
    ID      shift, and go to state 27

    $default  reduce using rule 24 (optional_statements)

    compound_statement   go to state 28
    optional_statements  go to state 81
    statement_list       go to state 30
    statement            go to state 31
    variable             go to state 32
    procedure_statement  go to state 33


State 61

   27 statement: variable ASSIGNOP . expression

    ADDOP  shift, and go to state 44
    NOT    shift, and go to state 45
    ID     shift, and go to state 46
    INUM   shift, and go to state 47
    RNUM   shift, and go to state 48
    '('    shift, and go to state 49

    expression         go to state 82
    simple_expression  go to state 51
    term               go to state 52
    factor             go to state 53


State 62

   17 subprogram_head: PROCEDURE ID $@3 . arguments ';'

    '('  shift, and go to state 83

    $default  reduce using rule 19 (arguments)

    arguments  go to state 84


State 63

   15 subprogram_head: FUNCTION ID $@2 . arguments ':' standard_type ';'

    '('  shift, and go to state 83

    $default  reduce using rule 19 (arguments)

    arguments  go to state 85


State 64

   11 subprogram_declarations: subprogram_declarations . subprogram_declaration ';'
   13 subprogram_declaration: subprogram_head declarations subprogram_declarations . compound_statement

    BBEGIN     shift, and go to state 17
    PROCEDURE  shift, and go to state 18
    FUNCTION   shift, and go to state 19

    subprogram_declaration  go to state 20
    subprogram_head         go to state 21
    compound_statement      go to state 86


State 65

    8 type: ARRAY '[' . INUM DOTDOT INUM ']' OF standard_type

    INUM  shift, and go to state 87


State 66

    5 declarations: declarations VAR identifier_list ':' type ';' .

    $default  reduce using rule 5 (declarations)


State 67

   43 simple_expression: ADDOP term .
   46 term: term . MULOP factor

    MULOP  shift, and go to state 75

    $default  reduce using rule 43 (simple_expression)


State 68

   53 factor: NOT factor .

    $default  reduce using rule 53 (factor)


State 69

   49 factor: ID '(' . expression_list ')'

    ADDOP  shift, and go to state 44
    NOT    shift, and go to state 45
    ID     shift, and go to state 46
    INUM   shift, and go to state 47
    RNUM   shift, and go to state 48
    '('    shift, and go to state 49

    expression_list    go to state 88
    expression         go to state 79
    simple_expression  go to state 51
    term               go to state 52
    factor             go to state 53


State 70

   48 factor: ID '[' . expression ']'

    ADDOP  shift, and go to state 44
    NOT    shift, and go to state 45
    ID     shift, and go to state 46
    INUM   shift, and go to state 47
    RNUM   shift, and go to state 48
    '('    shift, and go to state 49

    expression         go to state 89
    simple_expression  go to state 51
    term               go to state 52
    factor             go to state 53


State 71

   52 factor: '(' expression . ')'

    ')'  shift, and go to state 90


State 72

   30 statement: IF expression THEN . statement ELSE statement
   31          | IF expression THEN . statement

    BBEGIN  shift, and go to state 17
    IF      shift, and go to state 24
    WHILE   shift, and go to state 25
    FOR     shift, and go to state 26
    ID      shift, and go to state 27

    compound_statement   go to state 28
    statement            go to state 91
    variable             go to state 32
    procedure_statement  go to state 33


State 73

   41 expression: simple_expression RELOP . simple_expression

    ADDOP  shift, and go to state 44
    NOT    shift, and go to state 45
    ID     shift, and go to state 46
    INUM   shift, and go to state 47
    RNUM   shift, and go to state 48
    '('    shift, and go to state 49

    simple_expression  go to state 92
    term               go to state 52
    factor             go to state 53


State 74

   44 simple_expression: simple_expression ADDOP . term

    NOT   shift, and go to state 45
    ID    shift, and go to state 46
    INUM  shift, and go to state 47
    RNUM  shift, and go to state 48
    '('   shift, and go to state 49

    term    go to state 93
    factor  go to state 53


State 75

   46 term: term MULOP . factor

    NOT   shift, and go to state 45
    ID    shift, and go to state 46
    INUM  shift, and go to state 47
    RNUM  shift, and go to state 48
    '('   shift, and go to state 49

    factor  go to state 94


State 76

   32 statement: WHILE expression DO . statement

    BBEGIN  shift, and go to state 17
    IF      shift, and go to state 24
    WHILE   shift, and go to state 25
    FOR     shift, and go to state 26
    ID      shift, and go to state 27

    compound_statement   go to state 28
    statement            go to state 95
    variable             go to state 32
    procedure_statement  go to state 33


State 77

   33 statement: FOR variable ASSIGNOP . expression TO expression DO optional_statements

    ADDOP  shift, and go to state 44
    NOT    shift, and go to state 45
    ID     shift, and go to state 46
    INUM   shift, and go to state 47
    RNUM   shift, and go to state 48
    '('    shift, and go to state 49

    expression         go to state 96
    simple_expression  go to state 51
    term               go to state 52
    factor             go to state 53


State 78

   37 procedure_statement: ID '(' expression_list . ')'
   39 expression_list: expression_list . ',' expression

    ')'  shift, and go to state 97
    ','  shift, and go to state 98


State 79

   38 expression_list: expression .

    $default  reduce using rule 38 (expression_list)


State 80

   35 variable: ID '[' expression . ']'

    ']'  shift, and go to state 99


State 81

   26 statement_list: statement ';' optional_statements .

    $default  reduce using rule 26 (statement_list)


State 82

   27 statement: variable ASSIGNOP expression .

    $default  reduce using rule 27 (statement)


State 83

   18 arguments: '(' . parameter_list ')'

    ID  shift, and go to state 7

    identifier_list  go to state 100
    parameter_list   go to state 101


State 84

   17 subprogram_head: PROCEDURE ID $@3 arguments . ';'

    ';'  shift, and go to state 102


State 85

   15 subprogram_head: FUNCTION ID $@2 arguments . ':' standard_type ';'

    ':'  shift, and go to state 103


State 86

   13 subprogram_declaration: subprogram_head declarations subprogram_declarations compound_statement .

    $default  reduce using rule 13 (subprogram_declaration)


State 87

    8 type: ARRAY '[' INUM . DOTDOT INUM ']' OF standard_type

    DOTDOT  shift, and go to state 104


State 88

   39 expression_list: expression_list . ',' expression
   49 factor: ID '(' expression_list . ')'

    ')'  shift, and go to state 105
    ','  shift, and go to state 98


State 89

   48 factor: ID '[' expression . ']'

    ']'  shift, and go to state 106


State 90

   52 factor: '(' expression ')' .

    $default  reduce using rule 52 (factor)


State 91

   30 statement: IF expression THEN statement . ELSE statement
   31          | IF expression THEN statement .

    ELSE  shift, and go to state 107

    ELSE      [reduce using rule 31 (statement)]
    $default  reduce using rule 31 (statement)


State 92

   41 expression: simple_expression RELOP simple_expression .
   44 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 74

    $default  reduce using rule 41 (expression)


State 93

   44 simple_expression: simple_expression ADDOP term .
   46 term: term . MULOP factor

    MULOP  shift, and go to state 75

    $default  reduce using rule 44 (simple_expression)


State 94

   46 term: term MULOP factor .

    $default  reduce using rule 46 (term)


State 95

   32 statement: WHILE expression DO statement .

    $default  reduce using rule 32 (statement)


State 96

   33 statement: FOR variable ASSIGNOP expression . TO expression DO optional_statements

    TO  shift, and go to state 108


State 97

   37 procedure_statement: ID '(' expression_list ')' .

    $default  reduce using rule 37 (procedure_statement)


State 98

   39 expression_list: expression_list ',' . expression

    ADDOP  shift, and go to state 44
    NOT    shift, and go to state 45
    ID     shift, and go to state 46
    INUM   shift, and go to state 47
    RNUM   shift, and go to state 48
    '('    shift, and go to state 49

    expression         go to state 109
    simple_expression  go to state 51
    term               go to state 52
    factor             go to state 53


State 99

   35 variable: ID '[' expression ']' .

    $default  reduce using rule 35 (variable)


State 100

    4 identifier_list: identifier_list . ',' ID
   20 parameter_list: identifier_list . ':' type

    ','  shift, and go to state 10
    ':'  shift, and go to state 110


State 101

   18 arguments: '(' parameter_list . ')'
   21 parameter_list: parameter_list . ';' identifier_list ':' type

    ')'  shift, and go to state 111
    ';'  shift, and go to state 112


State 102

   17 subprogram_head: PROCEDURE ID $@3 arguments ';' .

    $default  reduce using rule 17 (subprogram_head)


State 103

   15 subprogram_head: FUNCTION ID $@2 arguments ':' . standard_type ';'

    INTEGER  shift, and go to state 39
    REAL     shift, and go to state 40

    standard_type  go to state 113


State 104

    8 type: ARRAY '[' INUM DOTDOT . INUM ']' OF standard_type

    INUM  shift, and go to state 114


State 105

   49 factor: ID '(' expression_list ')' .

    $default  reduce using rule 49 (factor)


State 106

   48 factor: ID '[' expression ']' .

    $default  reduce using rule 48 (factor)


State 107

   30 statement: IF expression THEN statement ELSE . statement

    BBEGIN  shift, and go to state 17
    IF      shift, and go to state 24
    WHILE   shift, and go to state 25
    FOR     shift, and go to state 26
    ID      shift, and go to state 27

    compound_statement   go to state 28
    statement            go to state 115
    variable             go to state 32
    procedure_statement  go to state 33


State 108

   33 statement: FOR variable ASSIGNOP expression TO . expression DO optional_statements

    ADDOP  shift, and go to state 44
    NOT    shift, and go to state 45
    ID     shift, and go to state 46
    INUM   shift, and go to state 47
    RNUM   shift, and go to state 48
    '('    shift, and go to state 49

    expression         go to state 116
    simple_expression  go to state 51
    term               go to state 52
    factor             go to state 53


State 109

   39 expression_list: expression_list ',' expression .

    $default  reduce using rule 39 (expression_list)


State 110

   20 parameter_list: identifier_list ':' . type

    INTEGER  shift, and go to state 39
    REAL     shift, and go to state 40
    ARRAY    shift, and go to state 41

    type           go to state 117
    standard_type  go to state 43


State 111

   18 arguments: '(' parameter_list ')' .

    $default  reduce using rule 18 (arguments)


State 112

   21 parameter_list: parameter_list ';' . identifier_list ':' type

    ID  shift, and go to state 7

    identifier_list  go to state 118


State 113

   15 subprogram_head: FUNCTION ID $@2 arguments ':' standard_type . ';'

    ';'  shift, and go to state 119


State 114

    8 type: ARRAY '[' INUM DOTDOT INUM . ']' OF standard_type

    ']'  shift, and go to state 120


State 115

   30 statement: IF expression THEN statement ELSE statement .

    $default  reduce using rule 30 (statement)


State 116

   33 statement: FOR variable ASSIGNOP expression TO expression . DO optional_statements

    DO  shift, and go to state 121


State 117

   20 parameter_list: identifier_list ':' type .

    $default  reduce using rule 20 (parameter_list)


State 118

    4 identifier_list: identifier_list . ',' ID
   21 parameter_list: parameter_list ';' identifier_list . ':' type

    ','  shift, and go to state 10
    ':'  shift, and go to state 122


State 119

   15 subprogram_head: FUNCTION ID $@2 arguments ':' standard_type ';' .

    $default  reduce using rule 15 (subprogram_head)


State 120

    8 type: ARRAY '[' INUM DOTDOT INUM ']' . OF standard_type

    OF  shift, and go to state 123


State 121

   33 statement: FOR variable ASSIGNOP expression TO expression DO . optional_statements

    BBEGIN  shift, and go to state 17
    IF      shift, and go to state 24
    WHILE   shift, and go to state 25
    FOR     shift, and go to state 26
    ID      shift, and go to state 27

    $default  reduce using rule 24 (optional_statements)

    compound_statement   go to state 28
    optional_statements  go to state 124
    statement_list       go to state 30
    statement            go to state 31
    variable             go to state 32
    procedure_statement  go to state 33


State 122

   21 parameter_list: parameter_list ';' identifier_list ':' . type

    INTEGER  shift, and go to state 39
    REAL     shift, and go to state 40
    ARRAY    shift, and go to state 41

    type           go to state 125
    standard_type  go to state 43


State 123

    8 type: ARRAY '[' INUM DOTDOT INUM ']' OF . standard_type

    INTEGER  shift, and go to state 39
    REAL     shift, and go to state 40

    standard_type  go to state 126


State 124

   33 statement: FOR variable ASSIGNOP expression TO expression DO optional_statements .

    $default  reduce using rule 33 (statement)


State 125

   21 parameter_list: parameter_list ';' identifier_list ':' type .

    $default  reduce using rule 21 (parameter_list)


State 126

    8 type: ARRAY '[' INUM DOTDOT INUM ']' OF standard_type .

    $default  reduce using rule 8 (type)
