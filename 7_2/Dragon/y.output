Terminals unused in grammar

   EQ
   NE
   LT
   LE
   GT
   GE
   PLUS
   MINUS
   OR
   STAR
   SLASH
   AND
   COMMA
   SEMICOLON
   ARRAY_ACCESS
   FUNCTION_CALL
   PROCEDURE_CALL
   ENTRY_NAME
   ENTRY_TYPE


State 31 conflicts: 1 shift/reduce
State 93 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 $@1: %empty

    2 program: $@1 PROGRAM ID '(' identifier_list ')' ';' declarations subprogram_declarations compound_statement '.'

    3 identifier_list: ID
    4                | identifier_list ',' ID

    5 declarations: declarations VAR identifier_list ':' type ';'
    6             | %empty

    7 type: standard_type
    8     | ARRAY '[' INUM DOTDOT INUM ']' OF standard_type

    9 standard_type: INTEGER
   10              | REAL

   11 subprogram_declarations: subprogram_declarations subprogram_declaration ';'
   12                        | %empty

   13 subprogram_declaration: subprogram_head declarations subprogram_declarations compound_statement

   14 subprogram_head: FUNCTION ID arguments ':' standard_type ';'
   15                | PROCEDURE ID arguments ';'

   16 arguments: '(' parameter_list ')'
   17          | %empty

   18 parameter_list: identifier_list ':' type
   19               | parameter_list ';' identifier_list ':' type

   20 compound_statement: BBEGIN optional_statements END

   21 optional_statements: statement_list
   22                    | %empty

   23 statement_list: statement
   24               | statement ';' optional_statements

   25 statement: variable ASSIGNOP expression
   26          | procedure_statement
   27          | compound_statement
   28          | IF expression THEN statement ELSE statement
   29          | IF expression THEN statement
   30          | WHILE expression DO statement
   31          | FOR variable ASSIGNOP expression TO expression DO optional_statements

   32 variable: ID
   33         | ID '[' expression ']'

   34 procedure_statement: ID
   35                    | ID '(' expression_list ')'

   36 expression_list: expression
   37                | expression_list ',' expression

   38 expression: simple_expression
   39           | simple_expression RELOP simple_expression

   40 simple_expression: term
   41                  | ADDOP term
   42                  | simple_expression ADDOP term

   43 term: factor
   44     | term MULOP factor

   45 factor: ID
   46       | ID '[' expression ']'
   47       | ID '(' expression_list ')'
   48       | INUM
   49       | RNUM
   50       | '(' expression ')'
   51       | NOT factor


Terminals, with rules where they appear

$end (0) 0
'(' (40) 2 16 35 47 50
')' (41) 2 16 35 47 50
',' (44) 4 37
'.' (46) 2
':' (58) 5 14 18 19
';' (59) 2 5 11 14 15 19 24
'[' (91) 8 33 46
']' (93) 8 33 46
error (256)
PROGRAM (258) 2
BBEGIN (259) 20
END (260) 20
VAR (261) 5
PROCEDURE (262) 15
FUNCTION (263) 14
INTEGER (264) 9
REAL (265) 10
ARRAY (266) 8
OF (267) 8
DOTDOT (268) 8
IF (269) 28 29
THEN (270) 28 29
ELSE (271) 28
WHILE (272) 30
FOR (273) 31
DO (274) 30 31
TO (275) 31
ASSIGNOP (276) 25 31
RELOP (277) 39
EQ (278)
NE (279)
LT (280)
LE (281)
GT (282)
GE (283)
ADDOP (284) 41 42
PLUS (285)
MINUS (286)
OR (287)
MULOP (288) 44
STAR (289)
SLASH (290)
AND (291)
NOT (292) 51
ID (293) 2 3 4 14 15 32 33 34 35 45 46 47
INUM (294) 8 48
RNUM (295) 49
COMMA (296)
SEMICOLON (297)
ARRAY_ACCESS (298)
FUNCTION_CALL (299)
PROCEDURE_CALL (300)
ENTRY_NAME (301)
ENTRY_TYPE (302)


Nonterminals, with rules where they appear

$accept (56)
    on left: 0
program (57)
    on left: 2, on right: 0
$@1 (58)
    on left: 1, on right: 2
identifier_list (59)
    on left: 3 4, on right: 2 4 5 18 19
declarations (60)
    on left: 5 6, on right: 2 5 13
type (61)
    on left: 7 8, on right: 5 18 19
standard_type (62)
    on left: 9 10, on right: 7 8 14
subprogram_declarations (63)
    on left: 11 12, on right: 2 11 13
subprogram_declaration (64)
    on left: 13, on right: 11
subprogram_head (65)
    on left: 14 15, on right: 13
arguments (66)
    on left: 16 17, on right: 14 15
parameter_list (67)
    on left: 18 19, on right: 16 19
compound_statement (68)
    on left: 20, on right: 2 13 27
optional_statements (69)
    on left: 21 22, on right: 20 24 31
statement_list (70)
    on left: 23 24, on right: 21
statement (71)
    on left: 25 26 27 28 29 30 31, on right: 23 24 28 29 30
variable (72)
    on left: 32 33, on right: 25 31
procedure_statement (73)
    on left: 34 35, on right: 26
expression_list (74)
    on left: 36 37, on right: 35 37 47
expression (75)
    on left: 38 39, on right: 25 28 29 30 31 33 36 37 46 50
simple_expression (76)
    on left: 40 41 42, on right: 38 39 42
term (77)
    on left: 43 44, on right: 40 41 42 44
factor (78)
    on left: 45 46 47 48 49 50 51, on right: 43 44 51


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 ($@1)

    program  go to state 1
    $@1      go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    2 program: $@1 . PROGRAM ID '(' identifier_list ')' ';' declarations subprogram_declarations compound_statement '.'

    PROGRAM  shift, and go to state 4


State 3

    0 $accept: program $end .

    $default  accept


State 4

    2 program: $@1 PROGRAM . ID '(' identifier_list ')' ';' declarations subprogram_declarations compound_statement '.'

    ID  shift, and go to state 5


State 5

    2 program: $@1 PROGRAM ID . '(' identifier_list ')' ';' declarations subprogram_declarations compound_statement '.'

    '('  shift, and go to state 6


State 6

    2 program: $@1 PROGRAM ID '(' . identifier_list ')' ';' declarations subprogram_declarations compound_statement '.'

    ID  shift, and go to state 7

    identifier_list  go to state 8


State 7

    3 identifier_list: ID .

    $default  reduce using rule 3 (identifier_list)


State 8

    2 program: $@1 PROGRAM ID '(' identifier_list . ')' ';' declarations subprogram_declarations compound_statement '.'
    4 identifier_list: identifier_list . ',' ID

    ')'  shift, and go to state 9
    ','  shift, and go to state 10


State 9

    2 program: $@1 PROGRAM ID '(' identifier_list ')' . ';' declarations subprogram_declarations compound_statement '.'

    ';'  shift, and go to state 11


State 10

    4 identifier_list: identifier_list ',' . ID

    ID  shift, and go to state 12


State 11

    2 program: $@1 PROGRAM ID '(' identifier_list ')' ';' . declarations subprogram_declarations compound_statement '.'

    $default  reduce using rule 6 (declarations)

    declarations  go to state 13


State 12

    4 identifier_list: identifier_list ',' ID .

    $default  reduce using rule 4 (identifier_list)


State 13

    2 program: $@1 PROGRAM ID '(' identifier_list ')' ';' declarations . subprogram_declarations compound_statement '.'
    5 declarations: declarations . VAR identifier_list ':' type ';'

    VAR  shift, and go to state 14

    $default  reduce using rule 12 (subprogram_declarations)

    subprogram_declarations  go to state 15


State 14

    5 declarations: declarations VAR . identifier_list ':' type ';'

    ID  shift, and go to state 7

    identifier_list  go to state 16


State 15

    2 program: $@1 PROGRAM ID '(' identifier_list ')' ';' declarations subprogram_declarations . compound_statement '.'
   11 subprogram_declarations: subprogram_declarations . subprogram_declaration ';'

    BBEGIN     shift, and go to state 17
    PROCEDURE  shift, and go to state 18
    FUNCTION   shift, and go to state 19

    subprogram_declaration  go to state 20
    subprogram_head         go to state 21
    compound_statement      go to state 22


State 16

    4 identifier_list: identifier_list . ',' ID
    5 declarations: declarations VAR identifier_list . ':' type ';'

    ','  shift, and go to state 10
    ':'  shift, and go to state 23


State 17

   20 compound_statement: BBEGIN . optional_statements END

    BBEGIN  shift, and go to state 17
    IF      shift, and go to state 24
    WHILE   shift, and go to state 25
    FOR     shift, and go to state 26
    ID      shift, and go to state 27

    $default  reduce using rule 22 (optional_statements)

    compound_statement   go to state 28
    optional_statements  go to state 29
    statement_list       go to state 30
    statement            go to state 31
    variable             go to state 32
    procedure_statement  go to state 33


State 18

   15 subprogram_head: PROCEDURE . ID arguments ';'

    ID  shift, and go to state 34


State 19

   14 subprogram_head: FUNCTION . ID arguments ':' standard_type ';'

    ID  shift, and go to state 35


State 20

   11 subprogram_declarations: subprogram_declarations subprogram_declaration . ';'

    ';'  shift, and go to state 36


State 21

   13 subprogram_declaration: subprogram_head . declarations subprogram_declarations compound_statement

    $default  reduce using rule 6 (declarations)

    declarations  go to state 37


State 22

    2 program: $@1 PROGRAM ID '(' identifier_list ')' ';' declarations subprogram_declarations compound_statement . '.'

    '.'  shift, and go to state 38


State 23

    5 declarations: declarations VAR identifier_list ':' . type ';'

    INTEGER  shift, and go to state 39
    REAL     shift, and go to state 40
    ARRAY    shift, and go to state 41

    type           go to state 42
    standard_type  go to state 43


State 24

   28 statement: IF . expression THEN statement ELSE statement
   29          | IF . expression THEN statement

    ADDOP  shift, and go to state 44
    NOT    shift, and go to state 45
    ID     shift, and go to state 46
    INUM   shift, and go to state 47
    RNUM   shift, and go to state 48
    '('    shift, and go to state 49

    expression         go to state 50
    simple_expression  go to state 51
    term               go to state 52
    factor             go to state 53


State 25

   30 statement: WHILE . expression DO statement

    ADDOP  shift, and go to state 44
    NOT    shift, and go to state 45
    ID     shift, and go to state 46
    INUM   shift, and go to state 47
    RNUM   shift, and go to state 48
    '('    shift, and go to state 49

    expression         go to state 54
    simple_expression  go to state 51
    term               go to state 52
    factor             go to state 53


State 26

   31 statement: FOR . variable ASSIGNOP expression TO expression DO optional_statements

    ID  shift, and go to state 55

    variable  go to state 56


State 27

   32 variable: ID .
   33         | ID . '[' expression ']'
   34 procedure_statement: ID .
   35                    | ID . '(' expression_list ')'

    '('  shift, and go to state 57
    '['  shift, and go to state 58

    ASSIGNOP  reduce using rule 32 (variable)
    $default  reduce using rule 34 (procedure_statement)


State 28

   27 statement: compound_statement .

    $default  reduce using rule 27 (statement)


State 29

   20 compound_statement: BBEGIN optional_statements . END

    END  shift, and go to state 59


State 30

   21 optional_statements: statement_list .

    $default  reduce using rule 21 (optional_statements)


State 31

   23 statement_list: statement .
   24               | statement . ';' optional_statements

    ';'  shift, and go to state 60

    ';'       [reduce using rule 23 (statement_list)]
    $default  reduce using rule 23 (statement_list)


State 32

   25 statement: variable . ASSIGNOP expression

    ASSIGNOP  shift, and go to state 61


State 33

   26 statement: procedure_statement .

    $default  reduce using rule 26 (statement)


State 34

   15 subprogram_head: PROCEDURE ID . arguments ';'

    '('  shift, and go to state 62

    $default  reduce using rule 17 (arguments)

    arguments  go to state 63


State 35

   14 subprogram_head: FUNCTION ID . arguments ':' standard_type ';'

    '('  shift, and go to state 62

    $default  reduce using rule 17 (arguments)

    arguments  go to state 64


State 36

   11 subprogram_declarations: subprogram_declarations subprogram_declaration ';' .

    $default  reduce using rule 11 (subprogram_declarations)


State 37

    5 declarations: declarations . VAR identifier_list ':' type ';'
   13 subprogram_declaration: subprogram_head declarations . subprogram_declarations compound_statement

    VAR  shift, and go to state 14

    $default  reduce using rule 12 (subprogram_declarations)

    subprogram_declarations  go to state 65


State 38

    2 program: $@1 PROGRAM ID '(' identifier_list ')' ';' declarations subprogram_declarations compound_statement '.' .

    $default  reduce using rule 2 (program)


State 39

    9 standard_type: INTEGER .

    $default  reduce using rule 9 (standard_type)


State 40

   10 standard_type: REAL .

    $default  reduce using rule 10 (standard_type)


State 41

    8 type: ARRAY . '[' INUM DOTDOT INUM ']' OF standard_type

    '['  shift, and go to state 66


State 42

    5 declarations: declarations VAR identifier_list ':' type . ';'

    ';'  shift, and go to state 67


State 43

    7 type: standard_type .

    $default  reduce using rule 7 (type)


State 44

   41 simple_expression: ADDOP . term

    NOT   shift, and go to state 45
    ID    shift, and go to state 46
    INUM  shift, and go to state 47
    RNUM  shift, and go to state 48
    '('   shift, and go to state 49

    term    go to state 68
    factor  go to state 53


State 45

   51 factor: NOT . factor

    NOT   shift, and go to state 45
    ID    shift, and go to state 46
    INUM  shift, and go to state 47
    RNUM  shift, and go to state 48
    '('   shift, and go to state 49

    factor  go to state 69


State 46

   45 factor: ID .
   46       | ID . '[' expression ']'
   47       | ID . '(' expression_list ')'

    '('  shift, and go to state 70
    '['  shift, and go to state 71

    $default  reduce using rule 45 (factor)


State 47

   48 factor: INUM .

    $default  reduce using rule 48 (factor)


State 48

   49 factor: RNUM .

    $default  reduce using rule 49 (factor)


State 49

   50 factor: '(' . expression ')'

    ADDOP  shift, and go to state 44
    NOT    shift, and go to state 45
    ID     shift, and go to state 46
    INUM   shift, and go to state 47
    RNUM   shift, and go to state 48
    '('    shift, and go to state 49

    expression         go to state 72
    simple_expression  go to state 51
    term               go to state 52
    factor             go to state 53


State 50

   28 statement: IF expression . THEN statement ELSE statement
   29          | IF expression . THEN statement

    THEN  shift, and go to state 73


State 51

   38 expression: simple_expression .
   39           | simple_expression . RELOP simple_expression
   42 simple_expression: simple_expression . ADDOP term

    RELOP  shift, and go to state 74
    ADDOP  shift, and go to state 75

    $default  reduce using rule 38 (expression)


State 52

   40 simple_expression: term .
   44 term: term . MULOP factor

    MULOP  shift, and go to state 76

    $default  reduce using rule 40 (simple_expression)


State 53

   43 term: factor .

    $default  reduce using rule 43 (term)


State 54

   30 statement: WHILE expression . DO statement

    DO  shift, and go to state 77


State 55

   32 variable: ID .
   33         | ID . '[' expression ']'

    '['  shift, and go to state 58

    $default  reduce using rule 32 (variable)


State 56

   31 statement: FOR variable . ASSIGNOP expression TO expression DO optional_statements

    ASSIGNOP  shift, and go to state 78


State 57

   35 procedure_statement: ID '(' . expression_list ')'

    ADDOP  shift, and go to state 44
    NOT    shift, and go to state 45
    ID     shift, and go to state 46
    INUM   shift, and go to state 47
    RNUM   shift, and go to state 48
    '('    shift, and go to state 49

    expression_list    go to state 79
    expression         go to state 80
    simple_expression  go to state 51
    term               go to state 52
    factor             go to state 53


State 58

   33 variable: ID '[' . expression ']'

    ADDOP  shift, and go to state 44
    NOT    shift, and go to state 45
    ID     shift, and go to state 46
    INUM   shift, and go to state 47
    RNUM   shift, and go to state 48
    '('    shift, and go to state 49

    expression         go to state 81
    simple_expression  go to state 51
    term               go to state 52
    factor             go to state 53


State 59

   20 compound_statement: BBEGIN optional_statements END .

    $default  reduce using rule 20 (compound_statement)


State 60

   24 statement_list: statement ';' . optional_statements

    BBEGIN  shift, and go to state 17
    IF      shift, and go to state 24
    WHILE   shift, and go to state 25
    FOR     shift, and go to state 26
    ID      shift, and go to state 27

    $default  reduce using rule 22 (optional_statements)

    compound_statement   go to state 28
    optional_statements  go to state 82
    statement_list       go to state 30
    statement            go to state 31
    variable             go to state 32
    procedure_statement  go to state 33


State 61

   25 statement: variable ASSIGNOP . expression

    ADDOP  shift, and go to state 44
    NOT    shift, and go to state 45
    ID     shift, and go to state 46
    INUM   shift, and go to state 47
    RNUM   shift, and go to state 48
    '('    shift, and go to state 49

    expression         go to state 83
    simple_expression  go to state 51
    term               go to state 52
    factor             go to state 53


State 62

   16 arguments: '(' . parameter_list ')'

    ID  shift, and go to state 7

    identifier_list  go to state 84
    parameter_list   go to state 85


State 63

   15 subprogram_head: PROCEDURE ID arguments . ';'

    ';'  shift, and go to state 86


State 64

   14 subprogram_head: FUNCTION ID arguments . ':' standard_type ';'

    ':'  shift, and go to state 87


State 65

   11 subprogram_declarations: subprogram_declarations . subprogram_declaration ';'
   13 subprogram_declaration: subprogram_head declarations subprogram_declarations . compound_statement

    BBEGIN     shift, and go to state 17
    PROCEDURE  shift, and go to state 18
    FUNCTION   shift, and go to state 19

    subprogram_declaration  go to state 20
    subprogram_head         go to state 21
    compound_statement      go to state 88


State 66

    8 type: ARRAY '[' . INUM DOTDOT INUM ']' OF standard_type

    INUM  shift, and go to state 89


State 67

    5 declarations: declarations VAR identifier_list ':' type ';' .

    $default  reduce using rule 5 (declarations)


State 68

   41 simple_expression: ADDOP term .
   44 term: term . MULOP factor

    MULOP  shift, and go to state 76

    $default  reduce using rule 41 (simple_expression)


State 69

   51 factor: NOT factor .

    $default  reduce using rule 51 (factor)


State 70

   47 factor: ID '(' . expression_list ')'

    ADDOP  shift, and go to state 44
    NOT    shift, and go to state 45
    ID     shift, and go to state 46
    INUM   shift, and go to state 47
    RNUM   shift, and go to state 48
    '('    shift, and go to state 49

    expression_list    go to state 90
    expression         go to state 80
    simple_expression  go to state 51
    term               go to state 52
    factor             go to state 53


State 71

   46 factor: ID '[' . expression ']'

    ADDOP  shift, and go to state 44
    NOT    shift, and go to state 45
    ID     shift, and go to state 46
    INUM   shift, and go to state 47
    RNUM   shift, and go to state 48
    '('    shift, and go to state 49

    expression         go to state 91
    simple_expression  go to state 51
    term               go to state 52
    factor             go to state 53


State 72

   50 factor: '(' expression . ')'

    ')'  shift, and go to state 92


State 73

   28 statement: IF expression THEN . statement ELSE statement
   29          | IF expression THEN . statement

    BBEGIN  shift, and go to state 17
    IF      shift, and go to state 24
    WHILE   shift, and go to state 25
    FOR     shift, and go to state 26
    ID      shift, and go to state 27

    compound_statement   go to state 28
    statement            go to state 93
    variable             go to state 32
    procedure_statement  go to state 33


State 74

   39 expression: simple_expression RELOP . simple_expression

    ADDOP  shift, and go to state 44
    NOT    shift, and go to state 45
    ID     shift, and go to state 46
    INUM   shift, and go to state 47
    RNUM   shift, and go to state 48
    '('    shift, and go to state 49

    simple_expression  go to state 94
    term               go to state 52
    factor             go to state 53


State 75

   42 simple_expression: simple_expression ADDOP . term

    NOT   shift, and go to state 45
    ID    shift, and go to state 46
    INUM  shift, and go to state 47
    RNUM  shift, and go to state 48
    '('   shift, and go to state 49

    term    go to state 95
    factor  go to state 53


State 76

   44 term: term MULOP . factor

    NOT   shift, and go to state 45
    ID    shift, and go to state 46
    INUM  shift, and go to state 47
    RNUM  shift, and go to state 48
    '('   shift, and go to state 49

    factor  go to state 96


State 77

   30 statement: WHILE expression DO . statement

    BBEGIN  shift, and go to state 17
    IF      shift, and go to state 24
    WHILE   shift, and go to state 25
    FOR     shift, and go to state 26
    ID      shift, and go to state 27

    compound_statement   go to state 28
    statement            go to state 97
    variable             go to state 32
    procedure_statement  go to state 33


State 78

   31 statement: FOR variable ASSIGNOP . expression TO expression DO optional_statements

    ADDOP  shift, and go to state 44
    NOT    shift, and go to state 45
    ID     shift, and go to state 46
    INUM   shift, and go to state 47
    RNUM   shift, and go to state 48
    '('    shift, and go to state 49

    expression         go to state 98
    simple_expression  go to state 51
    term               go to state 52
    factor             go to state 53


State 79

   35 procedure_statement: ID '(' expression_list . ')'
   37 expression_list: expression_list . ',' expression

    ')'  shift, and go to state 99
    ','  shift, and go to state 100


State 80

   36 expression_list: expression .

    $default  reduce using rule 36 (expression_list)


State 81

   33 variable: ID '[' expression . ']'

    ']'  shift, and go to state 101


State 82

   24 statement_list: statement ';' optional_statements .

    $default  reduce using rule 24 (statement_list)


State 83

   25 statement: variable ASSIGNOP expression .

    $default  reduce using rule 25 (statement)


State 84

    4 identifier_list: identifier_list . ',' ID
   18 parameter_list: identifier_list . ':' type

    ','  shift, and go to state 10
    ':'  shift, and go to state 102


State 85

   16 arguments: '(' parameter_list . ')'
   19 parameter_list: parameter_list . ';' identifier_list ':' type

    ')'  shift, and go to state 103
    ';'  shift, and go to state 104


State 86

   15 subprogram_head: PROCEDURE ID arguments ';' .

    $default  reduce using rule 15 (subprogram_head)


State 87

   14 subprogram_head: FUNCTION ID arguments ':' . standard_type ';'

    INTEGER  shift, and go to state 39
    REAL     shift, and go to state 40

    standard_type  go to state 105


State 88

   13 subprogram_declaration: subprogram_head declarations subprogram_declarations compound_statement .

    $default  reduce using rule 13 (subprogram_declaration)


State 89

    8 type: ARRAY '[' INUM . DOTDOT INUM ']' OF standard_type

    DOTDOT  shift, and go to state 106


State 90

   37 expression_list: expression_list . ',' expression
   47 factor: ID '(' expression_list . ')'

    ')'  shift, and go to state 107
    ','  shift, and go to state 100


State 91

   46 factor: ID '[' expression . ']'

    ']'  shift, and go to state 108


State 92

   50 factor: '(' expression ')' .

    $default  reduce using rule 50 (factor)


State 93

   28 statement: IF expression THEN statement . ELSE statement
   29          | IF expression THEN statement .

    ELSE  shift, and go to state 109

    ELSE      [reduce using rule 29 (statement)]
    $default  reduce using rule 29 (statement)


State 94

   39 expression: simple_expression RELOP simple_expression .
   42 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 75

    $default  reduce using rule 39 (expression)


State 95

   42 simple_expression: simple_expression ADDOP term .
   44 term: term . MULOP factor

    MULOP  shift, and go to state 76

    $default  reduce using rule 42 (simple_expression)


State 96

   44 term: term MULOP factor .

    $default  reduce using rule 44 (term)


State 97

   30 statement: WHILE expression DO statement .

    $default  reduce using rule 30 (statement)


State 98

   31 statement: FOR variable ASSIGNOP expression . TO expression DO optional_statements

    TO  shift, and go to state 110


State 99

   35 procedure_statement: ID '(' expression_list ')' .

    $default  reduce using rule 35 (procedure_statement)


State 100

   37 expression_list: expression_list ',' . expression

    ADDOP  shift, and go to state 44
    NOT    shift, and go to state 45
    ID     shift, and go to state 46
    INUM   shift, and go to state 47
    RNUM   shift, and go to state 48
    '('    shift, and go to state 49

    expression         go to state 111
    simple_expression  go to state 51
    term               go to state 52
    factor             go to state 53


State 101

   33 variable: ID '[' expression ']' .

    $default  reduce using rule 33 (variable)


State 102

   18 parameter_list: identifier_list ':' . type

    INTEGER  shift, and go to state 39
    REAL     shift, and go to state 40
    ARRAY    shift, and go to state 41

    type           go to state 112
    standard_type  go to state 43


State 103

   16 arguments: '(' parameter_list ')' .

    $default  reduce using rule 16 (arguments)


State 104

   19 parameter_list: parameter_list ';' . identifier_list ':' type

    ID  shift, and go to state 7

    identifier_list  go to state 113


State 105

   14 subprogram_head: FUNCTION ID arguments ':' standard_type . ';'

    ';'  shift, and go to state 114


State 106

    8 type: ARRAY '[' INUM DOTDOT . INUM ']' OF standard_type

    INUM  shift, and go to state 115


State 107

   47 factor: ID '(' expression_list ')' .

    $default  reduce using rule 47 (factor)


State 108

   46 factor: ID '[' expression ']' .

    $default  reduce using rule 46 (factor)


State 109

   28 statement: IF expression THEN statement ELSE . statement

    BBEGIN  shift, and go to state 17
    IF      shift, and go to state 24
    WHILE   shift, and go to state 25
    FOR     shift, and go to state 26
    ID      shift, and go to state 27

    compound_statement   go to state 28
    statement            go to state 116
    variable             go to state 32
    procedure_statement  go to state 33


State 110

   31 statement: FOR variable ASSIGNOP expression TO . expression DO optional_statements

    ADDOP  shift, and go to state 44
    NOT    shift, and go to state 45
    ID     shift, and go to state 46
    INUM   shift, and go to state 47
    RNUM   shift, and go to state 48
    '('    shift, and go to state 49

    expression         go to state 117
    simple_expression  go to state 51
    term               go to state 52
    factor             go to state 53


State 111

   37 expression_list: expression_list ',' expression .

    $default  reduce using rule 37 (expression_list)


State 112

   18 parameter_list: identifier_list ':' type .

    $default  reduce using rule 18 (parameter_list)


State 113

    4 identifier_list: identifier_list . ',' ID
   19 parameter_list: parameter_list ';' identifier_list . ':' type

    ','  shift, and go to state 10
    ':'  shift, and go to state 118


State 114

   14 subprogram_head: FUNCTION ID arguments ':' standard_type ';' .

    $default  reduce using rule 14 (subprogram_head)


State 115

    8 type: ARRAY '[' INUM DOTDOT INUM . ']' OF standard_type

    ']'  shift, and go to state 119


State 116

   28 statement: IF expression THEN statement ELSE statement .

    $default  reduce using rule 28 (statement)


State 117

   31 statement: FOR variable ASSIGNOP expression TO expression . DO optional_statements

    DO  shift, and go to state 120


State 118

   19 parameter_list: parameter_list ';' identifier_list ':' . type

    INTEGER  shift, and go to state 39
    REAL     shift, and go to state 40
    ARRAY    shift, and go to state 41

    type           go to state 121
    standard_type  go to state 43


State 119

    8 type: ARRAY '[' INUM DOTDOT INUM ']' . OF standard_type

    OF  shift, and go to state 122


State 120

   31 statement: FOR variable ASSIGNOP expression TO expression DO . optional_statements

    BBEGIN  shift, and go to state 17
    IF      shift, and go to state 24
    WHILE   shift, and go to state 25
    FOR     shift, and go to state 26
    ID      shift, and go to state 27

    $default  reduce using rule 22 (optional_statements)

    compound_statement   go to state 28
    optional_statements  go to state 123
    statement_list       go to state 30
    statement            go to state 31
    variable             go to state 32
    procedure_statement  go to state 33


State 121

   19 parameter_list: parameter_list ';' identifier_list ':' type .

    $default  reduce using rule 19 (parameter_list)


State 122

    8 type: ARRAY '[' INUM DOTDOT INUM ']' OF . standard_type

    INTEGER  shift, and go to state 39
    REAL     shift, and go to state 40

    standard_type  go to state 124


State 123

   31 statement: FOR variable ASSIGNOP expression TO expression DO optional_statements .

    $default  reduce using rule 31 (statement)


State 124

    8 type: ARRAY '[' INUM DOTDOT INUM ']' OF standard_type .

    $default  reduce using rule 8 (type)
